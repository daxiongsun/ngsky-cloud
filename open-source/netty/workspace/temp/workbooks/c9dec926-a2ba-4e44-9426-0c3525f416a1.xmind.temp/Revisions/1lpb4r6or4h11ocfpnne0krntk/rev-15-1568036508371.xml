<?xml version="1.0" encoding="UTF-8" standalone="no"?><xmap-revision-content xmlns="urn:xmind:xmap:xmlns:revision:1.0" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:svg="http://www.w3.org/2000/svg" xmlns:xhtml="http://www.w3.org/1999/xhtml" xmlns:xlink="http://www.w3.org/1999/xlink"><sheet id="1lpb4r6or4h11ocfpnne0krntk" modified-by="daxiong" theme="3mfga9hsj5o2f6amqfreb2e79n" timestamp="1568036507269" xmlns="urn:xmind:xmap:xmlns:content:2.0"><topic id="37c5o1vddusj8ua3mbna3folvm" modified-by="daxiong" structure-class="org.xmind.ui.map.unbalanced" timestamp="1568036441580"><title>Netty</title><extensions><extension provider="org.xmind.ui.map.unbalanced"><content><right-number>2</right-number></content></extension></extensions><children><topics type="attached"><topic id="5ieqhvfbqu58nfi0497a29mnso" modified-by="daxiong" timestamp="1568035624427"><title>IO模型</title><children><topics type="attached"><topic id="14km0ga9ebv82m00skt1tmaptr" modified-by="daxiong" timestamp="1568035620425"><title>OIO</title></topic><topic id="0ga7dpgjc5i8q1mffh0ov2762a" modified-by="daxiong" timestamp="1568035650628"><title>NIO</title><children><topics type="attached"><topic id="6atjq0td3be9va9pkc3c4reatb" modified-by="daxiong" timestamp="1568035641240"><title>selector</title></topic><topic id="2hl9evi0d85kcertaso340lc31" modified-by="daxiong" timestamp="1568035652718"><title>poll</title></topic><topic id="19sj68hut0a4kg5lhetch0h1iv" modified-by="daxiong" timestamp="1568035646714"><title>epoll</title></topic></topics></children></topic><topic id="6f17ak52qrghd8tmf6i3t49jfo" modified-by="daxiong" timestamp="1568035626936"><title>AIO</title></topic></topics></children></topic><topic id="6u7seo0341vvl49akt5j80p4rd" modified-by="daxiong" timestamp="1568036411995"><title>Reactor 模式</title><children><topics type="attached"><topic id="4npnstlakdc0vi80640g3jdelr" modified-by="daxiong" timestamp="1568035862865"><title>网络连接基本模型</title><children><topics type="attached"><topic id="4kfsef4ff5knd4crig0276qg3l" modified-by="daxiong" timestamp="1568035916163"><title>请求内容 -&gt; 解码 -&gt; 计算处理 -&gt; 编码 -&gt; 响应内容</title></topic></topics></children></topic><topic id="71cenk14nfp837n3lcmfsofnri" modified-by="daxiong" timestamp="1568036095399"><title>reactor 经典模式</title><children><topics type="attached"><topic id="3g9vcgauclgh3of36liiuunfjh" modified-by="daxiong" timestamp="1568036034291"><xhtml:img svg:height="91" svg:width="271" xhtml:src="xap:attachments/3ri8oeer8hro8k723au80cau99.png"/></topic><topic id="1sahf0907g5mti4r8pd7iess6n" modified-by="daxiong" timestamp="1568036094308"><title>Server 接受请求，转发请求给 Handler 处理</title></topic><topic id="7j6jsa4fqafa6r83lqpfspeh2l" modified-by="daxiong" timestamp="1568036339672"><title>优缺点</title><children><topics type="attached"><topic id="67baakuodc2d2bfqqabob3dlq7" modified-by="daxiong" timestamp="1568036269985"><title svg:width="500">1.ServerSocket 的 accept() 方法阻塞等待 client 请求连接，直到连接成功。</title></topic><topic id="3povlbc84i1difqc0g9up2na3t" modified-by="daxiong" timestamp="1568036337219"><title>2.socket.getInputStream() 阻塞读入数据，直到全部数据读完。</title></topic><topic id="6dtp8o7fpiavnihi559b433htj" modified-by="daxiong" timestamp="1568036373536"><title svg:width="500">3.socket.getOutputStream() 阻塞写入数据，直到全部数据写完。</title></topic></topics></children></topic></topics></children></topic><topic id="0n9snauq3amv6041r5frpcq0fu" modified-by="daxiong" timestamp="1568036449825"><title>reactor 改进版</title><children><topics type="attached"><topic id="6hhcaqtgmbqjv6m9u2fnlralg0" modified-by="daxiong" timestamp="1568036438317"><xhtml:img svg:height="104" svg:width="266" xhtml:src="xap:attachments/7o92onh51vjdqt97ing34vad7n.png"/></topic><topic id="58ob10ejv630rlc4icolnqk1vc" modified-by="daxiong" timestamp="1568036507269"><title>基于事件驱动设计，当有事件触发时，才会调用处理器进行数据处理</title></topic></topics></children></topic></topics></children></topic></topics></children></topic><title>Sheet 1</title></sheet></xmap-revision-content>